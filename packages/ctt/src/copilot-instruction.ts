import { IConstruct } from 'constructs';
import { IResolver } from 'projen';

import { ManagedTextFile, MangedTextFileOptions } from './managed-text-file';

export interface CopilotInstructionOptions extends MangedTextFileOptions {
  /**
   * What this instruction applies to (e.g., 'TypeScript development', 'Testing patterns')
   */
  readonly appliesTo: string;

  /**
   * The content of the instruction
   */
  readonly content: string;

  /**
   * The name of the instruction (e.g., 'typescript', 'testing')
   */
  readonly name: string;
}

export class CopilotInstruction extends ManagedTextFile {
  public readonly appliesTo: string;

  public readonly name: string;

  constructor(
    project: IConstruct,
    filePath: string,
    options: CopilotInstructionOptions,
  ) {
    super(project, filePath, {
      ...options,
      commentSymbol: '<!-- ',
      lines: [
        `# ${options.name} Instructions`,
        '',
        `**Applies to:** ${options.appliesTo}`,
        '',
        ...options.content.split('\n'),
      ],
    });

    this.name = options.name;
    this.appliesTo = options.appliesTo;
  }

  protected synthesizeContent(resolver: IResolver): string | undefined {
    const content = super.synthesizeContent(resolver);
    if (!content) return undefined;

    // Replace the comment marker to use markdown-style comments
    return content.replace(
      /^<!-- ~/m,
      '<!-- Generated by projen. To modify, edit .projenrc.ts and run "npx projen" -->',
    );
  }
}
